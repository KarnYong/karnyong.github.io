{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","dataTimeline","dataTimeline15","data_text","updatedDate","confirmed","hospitalized","deaths","recovered","newConfirmed","newHospitalized","newDeaths","newRecovered","data_pie","this","callAPI","axios","get","then","response","console","log","data","lastData","slice","setState","source","name","value","catch","error","classes","className","root","CssBaseline","AppBar","Toolbar","Typography","variant","title","appBarSpacer","Container","Grid","container","spacing","item","xs","align","href","target","rel","sm","Paper","paper","toLocaleString","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","PieChart","Pie","isAnimationActive","outerRadius","label","Cell","LineChart","Line","type","stroke","dot","footer","component","React","Component","withStyles","theme","mixins","toolbar","flexGrow","display","flexDirection","alignItems","justifyContent","padding","backgroundColor","palette","background","marginTop","unit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0be6d700.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart, \n  Pie, Cell, } from 'recharts';\n\nconst styles = theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataTimeline: [],\n      dataTimeline15: [],\n      data_text: {\n        updatedDate: '',\n        confirmed: '',\n        hospitalized: '',\n        deaths: '',\n        recovered: '',\n        newConfirmed: '',\n        newHospitalized: '',\n        newDeaths: '',\n        newRecovered: '',\n      },\n      data_pie: [{}],\n    };\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  callAPI() {\n    axios.get('https://covid19.th-stat.com/json/covid19v2/getTimeline.json ')\n    .then(response => {\n        console.log(response.data);\n        const data = response.data['Data'];\n        const lastData = data.slice(-1)[0];\n        this.setState({\n          dataTimeline: data,\n          dataTimeline15: data.slice(1).slice(-15),\n          data_text: {\n            source: response.data['Source'],\n            updatedDate: lastData['Date'],\n            confirmed: lastData['Confirmed'],\n            hospitalized: lastData['Hospitalized'],\n            deaths: lastData['Deaths'],\n            recovered: lastData['Recovered'],\n            newConfirmed: lastData['NewConfirmed'],\n            newHospitalized: lastData['NewHospitalized'],\n            newDeaths: lastData['NewDeaths'],\n            newRecovered: lastData['NewRecovered'],\n          },\n          data_pie: [\n            { name: 'hospitalized', value: lastData['Hospitalized'] },\n            { name: 'deaths', value: lastData['Deaths'] },\n            { name: 'recovered', value: lastData['Recovered'] },\n          ]\n        });\n        \n    })\n    .catch(function (error) {\n        console.log(error);\n    })\n  }\n  \n  render() {\n    const { classes } = this.props;\n    const { dataTimeline, dataTimeline15, data_text, data_pie } = this.state;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              Simple Thailand COVID-19 Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.appBarSpacer} />\n        <Container>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography align=\"right\">\n                Last updated: {data_text.updatedDate}\n              </Typography>\n              <Typography variant=\"subtitle2\" align=\"right\">\n                <a href={data_text.source} target=\"_blank\" rel=\"noopener noreferrer\">{data_text.source}</a>\n              </Typography>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Paper className={classes.paper}>\n                <Typography>Confirmed</Typography>\n                <Typography variant=\"h3\">{data_text.confirmed.toLocaleString()}</Typography>\n                <Typography variant=\"h5\">({data_text.newConfirmed.toLocaleString()})</Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Paper className={classes.paper}>\n                <Typography>Hospitalized</Typography>\n                <Typography variant=\"h3\">{data_text.hospitalized.toLocaleString()}</Typography>\n                <Typography variant=\"h5\">({data_text.newHospitalized.toLocaleString()})</Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Paper className={classes.paper}>\n                <Typography>Deaths</Typography>\n                <Typography variant=\"h3\">{data_text.deaths.toLocaleString()}</Typography>\n                <Typography variant=\"h5\">({data_text.newDeaths.toLocaleString()})</Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Paper className={classes.paper}>\n                <Typography>Recovered</Typography>\n                <Typography variant=\"h3\">{data_text.recovered.toLocaleString()}</Typography>\n                <Typography variant=\"h5\">({data_text.newRecovered.toLocaleString()})</Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Paper className={classes.paper}>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart \n                    width={500} \n                    height={300} \n                    data={dataTimeline15}\n                    margin={{top: 5, right: 5, left: 0, bottom: 5}}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"Date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"NewConfirmed\" fill=\"#8884d8\" />\n                    <Bar dataKey=\"NewDeaths\" fill=\"#FF9AA2\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Paper className={classes.paper}>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <PieChart width={400} height={400}>\n                    <Legend />\n                    <Pie dataKey=\"value\" isAnimationActive={false} data={data_pie} outerRadius={100} label>\n                      <Cell fill=\"#8884d8\" />\n                      <Cell fill=\"#FF9AA2\" />\n                      <Cell fill=\"#8FC1A9\" />\n                    </Pie>\n                    <Tooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <ResponsiveContainer width=\"100%\" height={500}>\n                  <LineChart\n                    data={dataTimeline}\n                    margin={{ top: 5, right: 5, left: 0, bottom: 5 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"Date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"Confirmed\" stroke=\"blue\" dot={false} />\n                    <Line type=\"monotone\" dataKey=\"Hospitalized\" stroke=\"orange\" dot={false} />\n                    <Line type=\"monotone\" dataKey=\"Deaths\" stroke=\"red\" dot={false} />\n                    <Line type=\"monotone\" dataKey=\"Recovered\" stroke=\"green\" dot={false} />\n                  </LineChart>  \n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n        <footer className={classes.footer}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\">\n              React App with Material UI for simple Thailand Covid-19 Dashboard\n            </Typography>\n            <Typography component=\"p\">\n              Source code by KarnYong @ <a href=\"https://github.com/KarnYong/react-material-ui-dashboard-covid-19\">https://github.com/KarnYong/react-material-ui-dashboard-covid-19</a>\n            </Typography>\n          </Paper>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}